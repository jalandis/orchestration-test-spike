# -*- mode: ruby -*-
# vi: set ft=ruby :

################################################################################
# Configurable list of servers in clusters.
#
# Master defined first to allow for setup before nodes.
################################################################################
cluster = {
  "orka-master" => { :ip => "10.98.76.80", :cpus => 1, :mem => 1024 },
  "orka-node-1" => { :ip => "10.98.76.81", :cpus => 1, :mem => 1024 },
  "orka-node-2" => { :ip => "10.98.76.82", :cpus => 1, :mem => 1024 }
}

Vagrant.configure("2") do |config|
  config.vm.box = "centos/7"
  config.vm.box_check_update = true

  # New feature of Vagrant 2.2.0 :-)
  config.vagrant.plugins = ["vagrant-hostmanager", "vagrant-vbguest"]

  cluster.each_with_index do |(hostname, info), index|
    config.vm.define hostname do |cfg|
      cfg.vm.hostname = hostname
      cfg.vm.network :private_network, ip: "#{info[:ip]}"
      cfg.vm.provider :virtualbox do |vb, override|
        vb.name = hostname

        vb.customize [
            "modifyvm", :id,
            "--memory", info[:mem],
            "--cpus", info[:cpus]
        ]
      end

      cfg.vm.synced_folder "../", "/opt/orka", :nfs => true

      if hostname.include? "master"
        provision_script = "/opt/orka/saltstack/master_bootstrap.sh"

        cfg.vm.provision :shell, :inline => "mkdir -p /etc/salt/pki/master/minions", :privileged => true
        cluster.each do |(minion, _)|
          if minion.include? "node"
            cfg.vm.provision :shell, :inline => "cp -f /opt/orka/saltstack/config/insecure.pub /etc/salt/pki/master/minions/#{minion}", :privileged => true
          end
        end
      else
        provision_script = "/opt/orka/saltstack/minion_bootstrap.sh"
      end

      cfg.vm.provision :hostmanager
      cfg.vm.provision :shell, :inline => provision_script, :privileged => true
    end
  end
end

# [vagrant@orka-master ~]$ sudo salt '*' test.ping
# [vagrant@orka-master ~]$ sudo salt '*' state.apply
